{
  "openapi": "3.0.0",
  "info": {
    "title": "cfapi Generated API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/api/companies": {
      "get": {
        "summary": "Get list of company",
        "tags": [
          "company"
        ],
        "responses": {
          "200": {
            "description": "List of company",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/company"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new company",
        "tags": [
          "company"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/company"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "company created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/{id}": {
      "get": {
        "summary": "Get a single company by ID",
        "tags": [
          "company"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "company found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company"
                }
              }
            }
          },
          "404": {
            "description": "company not found"
          }
        }
      },
      "put": {
        "summary": "Replace a company by ID",
        "tags": [
          "company"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/company"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "company not found"
          }
        }
      },
      "patch": {
        "summary": "Update a company by ID",
        "tags": [
          "company"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "website": {
                    "type": "string",
                    "format": "uri"
                  },
                  "location": {
                    "type": "object",
                    "properties": {
                      "city": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "city",
                      "country"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patched successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "company not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a company by ID",
        "tags": [
          "company"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted successfully"
          },
          "404": {
            "description": "company not found"
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "summary": "Get list of user",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "List of user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/user"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "tags": [
          "user"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "user created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "summary": "Get a single user by ID",
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "404": {
            "description": "user not found"
          }
        }
      },
      "put": {
        "summary": "Replace a user by ID",
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "user not found"
          }
        }
      },
      "patch": {
        "summary": "Update a user by ID",
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "minLength": 3
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "age": {
                    "type": "integer",
                    "minimum": 18
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "active",
                      "inactive",
                      "pending"
                    ]
                  },
                  "password": {
                    "type": "string",
                    "pattern": "^(?=.*\\d).{8,}$"
                  },
                  "profile": {
                    "type": "object",
                    "properties": {
                      "bio": {
                        "type": "string"
                      },
                      "dob": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "social": {
                        "type": "object",
                        "properties": {
                          "twitter": {
                            "type": "string"
                          },
                          "linkedin": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "twitter",
                          "linkedin"
                        ]
                      }
                    },
                    "required": [
                      "bio",
                      "dob"
                    ]
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 1
                  },
                  "company": {
                    "$ref": "#/components/schemas/company"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patched successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "user not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a user by ID",
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted successfully"
          },
          "404": {
            "description": "user not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "company": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "website": {
            "type": "string",
            "format": "uri"
          },
          "location": {
            "type": "object",
            "properties": {
              "city": {
                "type": "string"
              },
              "country": {
                "type": "string"
              }
            },
            "required": [
              "city",
              "country"
            ]
          }
        },
        "required": [
          "name"
        ]
      },
      "user": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "minLength": 3
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "age": {
            "type": "integer",
            "minimum": 18
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive",
              "pending"
            ]
          },
          "password": {
            "type": "string",
            "pattern": "^(?=.*\\d).{8,}$"
          },
          "profile": {
            "type": "object",
            "properties": {
              "bio": {
                "type": "string"
              },
              "dob": {
                "type": "string",
                "format": "date-time"
              },
              "social": {
                "type": "object",
                "properties": {
                  "twitter": {
                    "type": "string"
                  },
                  "linkedin": {
                    "type": "string"
                  }
                },
                "required": [
                  "twitter",
                  "linkedin"
                ]
              }
            },
            "required": [
              "bio",
              "dob"
            ]
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 1
          },
          "company": {
            "$ref": "#/components/schemas/company"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "email"
        ]
      }
    }
  }
}