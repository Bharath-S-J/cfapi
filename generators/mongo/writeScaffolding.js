import path from "node:path";
import fs from "node:fs/promises";
import logger from "../../utils/logger.js";

// Utility to safely write a file, ensuring directories exist
const safeWrite = async (filePath, content) => {
  await fs.mkdir(path.dirname(filePath), { recursive: true });
  await fs.writeFile(filePath, content);
  logger.info(` Created: ${path.relative(process.cwd(), filePath)}`);
};

const writeScaffolding = async (outputDir, engineName = 'mongo') => {
  try {
    logger.info("Writing MongoDB engine scaffolding files...");

    const date = new Date().toISOString();

    // Static base files at project root
    const files = {
      "README.md": `# MongoDB API

This API was generated using \`cfapi\` in **MongoDB** mode.

##  Endpoints

Each model is available under \`/api/<model>\`.

##  API Documentation

Swagger UI is served at: [http://localhost:3000/docs](http://localhost:3000/docs)

##  Setup

\`\`\`bash
npm install
npm run dev
\`\`\`

Update your \`.env\` file with the correct Mongo URI for your environment.

---

Generated on ${date}
`,

      ".env": `PORT=3000
MONGO_URI=mongodb://localhost:27017/mydb
`,

      ".gitignore": `node_modules
.env
openapi.json
`,

      "package.json": JSON.stringify(
        {
          name: "cfapi-mongo-app",
          version: "1.0.0",
          description: "MongoDB API generated by cfapi CLI",
          main: "server.js",
          type: "module",
          scripts: {
            dev: "nodemon server.js",
            start: "node server.js",
          },
          dependencies: {
            express: "^4.18.2",
            dotenv: "^16.3.1",
            mongoose: "^8.0.0",
            cors: '^2.8.5',
            "swagger-ui-express": "^4.6.3"
          },
          devDependencies: {
            nodemon: "^3.0.2",
          },
        },
        null,
        2
      ),
    };

    // Write all static files
    await Promise.all(
      Object.entries(files).map(([fileName, content]) =>
        safeWrite(path.join(outputDir, fileName), content)
      )
    );

    // Write config/db.js file
    const dbJsContent = `import mongoose from 'mongoose';

const connectDB = async () => {
  try {
    const conn = await mongoose.connect(process.env.MONGO_URI);
    console.log(\` MongoDB connected: \${conn.connection.host}\`);
  } catch (err) {
    console.error(' MongoDB connection failed:', err.message);
    process.exit(1);
  }
};

export default connectDB;
`;

    await safeWrite(path.join(outputDir, 'config/db.js'), dbJsContent);

    logger.info(" MongoDB scaffolding files written.");
  } catch (err) {
    logger.error(` Failed to write MongoDB scaffolding: ${err.message}`);
    throw err;
  }
};

export default writeScaffolding;
